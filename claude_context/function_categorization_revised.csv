jb_cat,function,location,line,description,used_by,category
core_io,read_file,utils.py,144,Environment-aware file reading that automatically handles local files vs GitHub API calls for Railway deployment,"load_all_data;get_google_sheet;check_for_duplicate_data;execute_data_deletion;load_scores_data",core_data_loading
core_io,write_file,utils.py,160,Environment-aware file writing with automatic GitHub commits for Railway deployment,"execute_data_update;execute_data_deletion;update_all_data",core_data_loading
core_io,read_from_github,utils.py,91,Direct GitHub API file reading for Railway production environment,read_file,core_data_loading
core_io,write_to_github,utils.py,114,Direct GitHub API file writing with commit creation for Railway production,write_file,core_data_loading
data_update,backup_file,utils.py,176,Creates timestamped backup copies of data files before modifications,create_timestamped_backups,core_data_loading
data_update,process_round_for_all_scores,utils.py,307,Core scoring calculation engine that computes GrossVP NetVP Stableford points from raw scores and handicaps,execute_data_update,data_processing
data_update,add_cumulative_scores,utils.py,375,Calculates running cumulative scores through rounds for trend analysis,process_round_for_all_scores,data_processing
data_update,reshape_round_data,utils.py,506,Converts wide-format Google Sheets data to long format by hole,process_google_sheets_data,data_processing
data_update,check_for_complete_and_duplicate_data,utils.py,642,Validates data integrity across files and detects duplicates,1000Data update.py,file_management
data_update,update_all_data,utils.py,598,Updates master data files after new data insertion,execute_data_update,file_management
data_update,save_to_parquet,utils.py,419,Saves DataFrame to parquet format with error handling,Data processing functions,file_management
data_update,create_timestamped_backups,helpers/data_deletion_processing.py,79,Creates timestamped backup files before data deletion operations,execute_data_deletion,file_management
data_update,get_google_sheet,utils.py,431,Cached function for loading data from Google Sheets with authentication,1000Data update.py,cached_data_functions
data_update,process_google_sheets_data,helpers/data_update_processing.py,56,Processes and validates data from Google Sheets for import,1000Data update.py,specialized_processing
data_update,execute_data_update,helpers/data_update_processing.py,119,Executes complete data update workflow with backup and processing,1000Data update.py,specialized_processing
data_retrieval,aggregate_data,utils.py,819,Flexible data aggregation function supporting TEG Round Player and 9-hole level analysis,"get_complete_teg_data;get_round_data;get_9_data;get_Pl_data",data_processing
data_retrieval,load_all_data,utils.py,246,Primary cached data loading function with filtering options for TEG 50 and incomplete tournaments,"Most analysis pages;get_complete_teg_data;get_round_data;score_type_stats;get_scorecard_data",core_data_loading
data_retrieval,get_complete_teg_data,utils.py,878,Cached function returning complete TEG-level data excluding incomplete tournaments,teg_worsts.py,cached_data_functions
data_retrieval,get_round_data,utils.py,890,Cached function returning round-level aggregated data with filtering options,"ave_by_course.py;teg_worsts.py",cached_data_functions
data_retrieval,get_9_data,utils.py,896,Cached function returning 9-hole (front/back) aggregated data,teg_worsts.py,cached_data_functions
data_retrieval,get_ranked_teg_data,utils.py,1003,Cached function returning TEG data with performance rankings added,"301Best_TEGs_and_Rounds.py;302Personal Best Rounds & TEGs.py;latest_teg_context.py",cached_data_functions
data_retrieval,get_ranked_round_data,utils.py,1009,Cached function returning round data with performance rankings added,"301Best_TEGs_and_Rounds.py;302Personal Best Rounds & TEGs.py;latest_round.py",cached_data_functions
data_retrieval,get_ranked_frontback_data,utils.py,1015,Cached function returning 9-hole data with performance rankings added,Records and analysis pages,cached_data_functions
performance_analysis,get_teg_winners,utils.py,749,Extracts tournament winners (Trophy Green Jacket Wooden Spoon) from TEG data,101TEG History.py,data_processing
performance_analysis,add_ranks,utils.py,936,Adds ranking columns to DataFrames for performance comparison,"get_ranked_teg_data;get_ranked_round_data;get_ranked_frontback_data",data_processing
performance_analysis,get_best,utils.py,1020,Finds best performances for specified measure with player-level or overall analysis,"301Best_TEGs_and_Rounds.py;302Personal Best Rounds & TEGs.py",analysis_functions
performance_analysis,get_worst,utils.py,1053,Finds worst performances for specified measure with player-level or overall analysis,teg_worsts.py,analysis_functions
performance_analysis,score_type_stats,utils.py,1263,Calculates career statistics for eagles birdies pars and poor scores,birdies_etc.py,analysis_functions
performance_analysis,max_scoretype_per_round,utils.py,1289,Finds maximum achievement counts in single rounds (most birdies etc.),birdies_etc.py,analysis_functions
performance_analysis,chosen_rd_context,utils.py,1096,Provides context for how a specific round compares to other rounds,latest_round.py,analysis_functions
performance_analysis,chosen_teg_context,utils.py,1118,Provides context for how a specific TEG compares to other TEGs,latest_teg_context.py,analysis_functions
performance_analysis,calculate_multi_score_running_sum,helpers/streak_analysis_processing.py,35,Calculates consecutive achievement streaks (consecutive pars birdies etc.),prepare_streak_data_for_display,analysis_functions
performance_analysis,summarise_teg_wins,utils_win_tables.py,6,Creates summary tables of TEG wins by player with win counts and TEG lists,101TEG History.py,specialized_processing
performance_analysis,prepare_streak_data_for_display,helpers/streak_analysis_processing.py,118,Complete workflow for calculating and summarizing performance streaks,streaks.py,specialized_processing
performance_analysis,count_scores_by_player,helpers/score_count_processing.py,38,Creates score distribution matrices showing frequency of each score by player,sc_count.py,specialized_processing
performance_analysis,calculate_bestball_scores,helpers/bestball_processing.py,55,Cached calculation of bestball team format scores (best score per hole),bestball.py,cached_data_functions
performance_analysis,calculate_worstball_scores,helpers/bestball_processing.py,85,Cached calculation of worstball team format scores (worst score per hole),bestball.py,cached_data_functions
charts,create_cumulative_graph,make_charts.py,26,Creates cumulative performance charts across tournament rounds,"102TEG Results.py;leaderboard.py",chart_visualization
charts,create_round_graph,make_charts.py,111,Creates round-specific performance charts with annotations,latest_round.py,chart_visualization
charts,format_value,make_charts.py,13,Formats values for chart display based on chart type,"create_cumulative_graph;create_round_graph",chart_visualization
charts,add_round_annotations,make_charts.py,6,Adds vertical line annotations to mark rounds on charts,"create_cumulative_graph;create_round_graph",chart_visualization
charts,adjusted_stableford,make_charts.py,103,Adjusts Stableford scores for chart display,Chart formatting functions,chart_visualization
charts,adjusted_grossvp,make_charts.py,106,Adjusts GrossVP values for chart display,Chart formatting functions,chart_visualization
charts,create_percentage_distribution_chart,helpers/score_count_processing.py,75,Creates percentage distribution bar charts for score analysis,sc_count.py,chart_visualization
scorecard,get_scorecard_data,utils.py,1481,Specialized data loading for scorecard generation with flexible filtering by TEG/round/player,"scorecard_v2.py;scorecard_utils.py;scorecard_v2_mobile.py",core_data_loading
scorecard,generate_single_round_html,scorecard_utils.py,144,Generates HTML for individual player round scorecards with hole-by-hole details,scorecard_v2.py,scorecard_generation
scorecard,generate_tournament_html,scorecard_utils.py,297,Creates comprehensive tournament scorecard showing all rounds for one player,scorecard_v2.py,scorecard_generation
scorecard,generate_round_comparison_html,scorecard_utils.py,450,Generates side-by-side comparison of all players for a specific round,scorecard_v2.py,scorecard_generation
scorecard,generate_single_round_html_mobile,scorecard_utils.py,650,Mobile-optimized individual round scorecard with responsive design,scorecard_v2_mobile.py,scorecard_generation
scorecard,generate_tournament_html_mobile,scorecard_utils.py,790,Mobile-optimized tournament scorecard with condensed layout,scorecard_v2_mobile.py,scorecard_generation
scorecard,generate_round_comparison_html_mobile,scorecard_utils.py,1028,Mobile-optimized round comparison with horizontal scrolling,scorecard_v2_mobile.py,scorecard_generation
scorecard,load_scorecard_css,scorecard_utils.py,131,Loads CSS styling for scorecard display consistency,"scorecard_v2.py;scorecard_v2_mobile.py",scorecard_generation
scorecard,generate_scorecard_html,scorecard_utils.py,13,Generic scorecard HTML generator with configurable layouts,Internal scorecard functions,scorecard_generation
scorecard,validate_and_prepare_single_round_data,helpers/scorecard_data_processing.py,53,Validates scorecard data for completeness and formats for display,scorecard_v2.py,specialized_processing
leaderboard_generation,create_leaderboard,leaderboard_utils.py,14,Creates formatted leaderboard with rankings and position indicators,display_leaderboard,leaderboard_generation
leaderboard_generation,display_leaderboard,leaderboard_utils.py,139,Complete leaderboard display with title table and champion callouts,"102TEG Results.py;leaderboard.py",leaderboard_generation
leaderboard_generation,get_champions,leaderboard_utils.py,100,Extracts and formats champion/leader information from leaderboard,display_leaderboard,leaderboard_generation
leaderboard_generation,get_last_place,leaderboard_utils.py,114,Extracts and formats last place information from leaderboard,display_leaderboard,leaderboard_generation
leaderboard_generation,format_value,leaderboard_utils.py,72,Formats leaderboard values based on score type (GrossVP Stableford etc.),"create_leaderboard;generate_table_html",leaderboard_generation
display_formatting,format_vs_par,utils.py,730,Formats vs-par values with +/- notation (e.g. +2 -1 E for even),"Multiple display functions;scorecard_utils.py;bestball.py",display_formatting
display_formatting,datawrapper_table,utils.py,1349,Generates HTML tables with consistent Datawrapper styling,"ave_by_course.py;sc_count.py;300TEG Records.py",display_formatting
display_formatting,create_stat_section,utils.py,1141,Creates formatted HTML stat sections for records displays,"300TEG Records.py;teg_worsts.py",display_formatting
display_formatting,format_record_value,helpers/display_helpers.py,24,Formats performance values with appropriate +/- notation for records,prepare_records_display,display_formatting
display_formatting,ordinal,utils.py,1081,Converts numbers to ordinal strings (1st 2nd 3rd etc.),safe_ordinal,display_formatting
display_formatting,safe_ordinal,utils.py,1088,Safe ordinal conversion with error handling for None/NaN values,"chosen_rd_context;chosen_teg_context",display_formatting
display_formatting,load_datawrapper_css,utils.py,1345,Loads standard CSS styling for consistent table appearance,Most display pages,helper_utilities
helper_utilities,get_player_name,utils.py,294,Converts player codes to full names (e.g. 'JB' -> 'Jon Baker'),Display functions,helper_utilities
helper_utilities,load_course_info,utils.py,1585,Loads course information including areas for geographical filtering,ave_by_course.py,helper_utilities
helper_utilities,get_trophy_full_name,utils.py,1563,Converts trophy abbreviations to full names for display,101TEG History.py,helper_utilities
helper_utilities,compress_ranges,utils_win_tables.py,51,Compresses number ranges for display (e.g. '1 2 3 5' -> '1-3 5'),101TEG History.py,helper_utilities
helper_utilities,get_base_directory,utils.py,30,Gets base directory path for file operations across environments,File I/O functions,helper_utilities
streamlit_functionality,clear_all_caches,utils.py,25,Clears all Streamlit caches - critical after data updates,"1000Data update.py;delete_data.py;execute_data_deletion",helper_utilities
streamlit_functionality,initialize_update_state,helpers/data_update_processing.py,38,Initializes session state for data update workflow state machine,1000Data update.py,state_management
streamlit_functionality,initialize_deletion_state,helpers/data_deletion_processing.py,22,Initializes session state for data deletion workflow state machine,delete_data.py,state_management
streamlit_functionality,initialize_scorecard_session_state,helpers/scorecard_data_processing.py,153,Sets up session state for scorecard tab selection and preferences,scorecard_v2.py,state_management
streamlit_functionality,initialize_round_selection_state,helpers/latest_round_processing.py,32,Initializes session state for round selection interface,latest_round.py,state_management
streamlit_functionality,initialize_teg_selection_state,helpers/latest_round_processing.py,186,Initializes session state for TEG selection interface,latest_teg_context.py,state_management
streamlit_functionality,create_round_selection_reset_function,helpers/latest_round_processing.py,70,Creates callback function for 'Latest Round' button reset,latest_round.py,state_management